{"version":3,"sources":["components/LineItemInput.tsx","components/CurrencyInput.tsx","App.tsx","components/MomentDates.tsx","serviceWorker.ts","index.tsx"],"names":["LineItemUnit","VALID_FIRST","VALID_NEXT","CurrencyInput","props","className","max","Number","MAX_SAFE_INTEGER","onValueChange","value","name","style","textAlign","decimalPlaces","handleKeyDown","useCallback","e","key","keyCode","isZero","test","nextValue","decimalShift","BN","pow","valueString","times","toFixed","nextValueString","slice","div","handleChange","valueDisplay","toFormat","ROUND_HALF_EVEN","groupSize","groupSeparator","decimalSeparator","inputMode","onChange","onKeyDown","TransportationMode","LineItemUnitSpecs","CostPerPerson","iconInput","iconUnit","label","CostPerGroup","Miles","tag","Rooms","CostPerRoomPerNight","paddingRight","CostPerMile","Persons","Nights","LineItemInput","setValue","defaultUnit","setUnit","helperText","labelName","labelInfo","overrideDecimalPlaces","allUnitSpecs","units","map","x","unitSpec","labelFor","fill","vertical","Classes","INPUT_GROUP","icon","INPUT","width","undefined","INPUT_ACTION","float","minimal","length","i","active","onClick","MomentDate","date","withTime","format","m","moment","isValid","intent","Intent","PRIMARY","MomentDateRange","range","start","end","classNames","TransportationWay","TRANSPORTATION_OPTIONS","None","Airplane","Train","Bus","Rental","Charter","Custom","TRANSPORTATION_SPEC","TRAVEL_REIMBUSRMENT_PER_MILE","injectHooks","obj","set","unit","sum","values","reduce","total","plus","TransportationWaySpecs","OneWay","RoundTrip","DEFAULT_DATE_FORMATTER","formatDate","parseDate","str","toDate","placeholder","App","useState","attendeesCount","setAttendeesCount","TOTAL","Error","PER_PERSON","TIMES","scalar","per","per2","WAYS","ways","createFormOps","registration","setRegistration","hotelFees","setHotelFees","hotelDateRange","setHotelDateRange","hotelRooms","setHotelRooms","hotelCostPerRoom","setHotelCostPerRoom","transportationFixed","setTransportationFixed","transportationVariableDistance","setTransportationVariableDistance","transportationVariableCostPerDistance","setTransportationCostPerDistance","transportationCostPerTicket","setTransportationCostPerTicket","transportationVariableWays","setTransportationVariableWays","transportationTicketWays","setTransportationTicketWays","transportationMode","setTransportationMode","hotelNightsValue","Math","diff","hotelNights","transportationVariableFees","transportationVariableReimbursement","transprotationVariable","transportationTicket","totalTransportation","perPersonRequestedTransportation","perPersonRequestedRegistration","hotelRoomsTotal","totalHotel","perPersonRequestedHotel","perPersonRequestedTotal","perPersonOutOfPocket","isLessThan","minus","grandTotalOutOfPocket","totalRegistration","grandTotalRequested","totalRequestedVariable","totalRequestedFixed","grandTotalApproved","Group","align","Alignment","LEFT","Heading","Divider","text","margin","elevation","Elevation","TWO","display","flexDirection","padding","maxWidth","fontWeight","flexWrap","options","currentTarget","allowSingleDayRange","contiguousCalendarMonths","shortcuts","ROUND_HALF_UP","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.4825057e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BN from 'bignumber.js';\r\nimport { FormGroup, ControlGroup, Classes, Icon, ButtonGroup, Button, IconName, Tag } from \"@blueprintjs/core\";\r\nimport { CurrencyInput } from \"./CurrencyInput\";\r\n\r\nexport type LineItemInputProps = {\r\n  value: BN,\r\n  setValue: ((x: BN) => void),\r\n  helperText?: React.ReactNode,\r\n  label?: React.ReactNode,\r\n  name?: string,\r\n  labelInfo?: React.ReactNode,\r\n  iconInput?: IconName,\r\n  tag?: React.ReactNode,\r\n  units?: LineItemUnit[],\r\n  defaultUnit: LineItemUnit,\r\n  setUnit: ((x: LineItemUnit) => void),\r\n  overrideDecimalPlaces?: number,\r\n}\r\n\r\nexport enum LineItemUnit {\r\n  CostPerPerson = 'per person',\r\n  CostPerGroup = 'per group',\r\n  Miles = 'miles',\r\n  CostPerMile = 'per mile',\r\n  Persons = 'people',\r\n  Rooms = 'rooms',\r\n  CostPerRoomPerNight = 'USD/room/night',\r\n  Nights = 'nights',\r\n}\r\n\r\ntype LineItemUnitSpec = {\r\n  value: LineItemUnit,\r\n  iconUnit?: IconName,\r\n  iconInput?: IconName,\r\n  label: string,\r\n  tag?: string\r\n  decimalPlaces?: number,\r\n  paddingRight?: number | string,\r\n};\r\n\r\nconst LineItemUnitSpecs: Record<LineItemUnit, LineItemUnitSpec> = {\r\n  [LineItemUnit.CostPerPerson]: {\r\n    value: LineItemUnit.CostPerPerson,\r\n    iconInput: 'dollar',\r\n    iconUnit: 'person',\r\n    label: 'per person',\r\n  },\r\n  [LineItemUnit.CostPerGroup]: {\r\n    value: LineItemUnit.CostPerGroup,\r\n    iconInput: 'dollar',\r\n    iconUnit: 'people',\r\n    label: 'per group'\r\n  },\r\n  [LineItemUnit.Miles]: {\r\n    value: LineItemUnit.Miles,\r\n    iconInput: 'map',\r\n    label: 'miles',\r\n    tag: 'miles',\r\n    decimalPlaces: 1\r\n  },\r\n  [LineItemUnit.Rooms]: {\r\n    value: LineItemUnit.Rooms,\r\n    label: 'rooms',\r\n    tag: 'rooms',\r\n    decimalPlaces: 0\r\n  },\r\n  [LineItemUnit.CostPerRoomPerNight]: {\r\n    value: LineItemUnit.CostPerRoomPerNight,\r\n    iconInput: 'dollar',\r\n    label: 'per room',\r\n    tag: 'per room',\r\n    paddingRight: '4.8em',\r\n  },\r\n  [LineItemUnit.CostPerMile]: {\r\n    value: LineItemUnit.CostPerMile,\r\n    iconInput: 'dollar',\r\n    label: 'per mile',\r\n    tag: 'per mile',\r\n    decimalPlaces: 2,\r\n    paddingRight: '4.6em',\r\n  },\r\n  [LineItemUnit.Persons]: {\r\n    value: LineItemUnit.Persons,\r\n    iconInput: 'people',\r\n    label: '# of people',\r\n    tag: 'people',\r\n    paddingRight: '4em',\r\n    decimalPlaces: 0\r\n  },\r\n  [LineItemUnit.Nights]: {\r\n    value: LineItemUnit.Nights,\r\n    iconInput: 'moon',\r\n    label: 'nights',\r\n    tag: 'nights',\r\n    decimalPlaces: 0\r\n  }\r\n}\r\n\r\nexport const LineItemInput = (props: LineItemInputProps) => {\r\n  const {\r\n    value, setValue, defaultUnit, setUnit,\r\n    helperText, label, name: labelName, labelInfo, overrideDecimalPlaces } = props;\r\n\r\n  const units = props.units || [LineItemUnit.CostPerPerson, LineItemUnit.CostPerGroup];\r\n  const allUnitSpecs = units.map(x => LineItemUnitSpecs[x]);\r\n  const unitSpec = LineItemUnitSpecs[defaultUnit];\r\n  const tag = props.tag || unitSpec.tag;\r\n  const iconInput = props.iconInput || unitSpec.iconInput;\r\n\r\n  return (\r\n    <FormGroup\r\n      helperText={helperText}\r\n      label={label}\r\n      labelFor={labelName}\r\n      labelInfo={labelInfo}\r\n    >\r\n      <ControlGroup fill={false} vertical={false}>\r\n        <div className={Classes.INPUT_GROUP}>\r\n          <Icon icon={iconInput} />\r\n          <CurrencyInput \r\n            name={labelName}\r\n            className={Classes.INPUT}\r\n            value={value}\r\n            onValueChange={setValue}\r\n            style={tag ? {\r\n              textAlign: 'right',\r\n              paddingRight: unitSpec.paddingRight || '3.5em',\r\n              width: 196} : undefined}\r\n            decimalPlaces={\r\n              typeof overrideDecimalPlaces !== 'undefined' ? overrideDecimalPlaces :\r\n              typeof unitSpec.decimalPlaces !== 'undefined' ? unitSpec.decimalPlaces :\r\n              undefined} />\r\n          {tag\r\n            ? <span className={Classes.INPUT_ACTION}>\r\n                <Tag style={{ float: 'right' }} minimal={true}>{tag}</Tag>\r\n              </span>\r\n            : <></>}\r\n        </div>\r\n        {allUnitSpecs.length > 1 ?\r\n          <ButtonGroup>\r\n            {allUnitSpecs.map((x, i) => \r\n             <Button\r\n              key={i}\r\n              icon={x.iconUnit}\r\n              active={defaultUnit === x.value}\r\n              onClick={() => setUnit(x.value)}>\r\n                {x.label}\r\n            </Button>\r\n            )}\r\n          </ButtonGroup>\r\n          : <></>\r\n        }\r\n      </ControlGroup>\r\n    </FormGroup>\r\n  );\r\n}","// https://github.com/larkintuckerllc/react-currency-input\r\n\r\nimport React, { CSSProperties, FC, KeyboardEvent, useCallback } from 'react';\r\nimport BN from 'bignumber.js';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  name?: string;\r\n  max?: number;\r\n  onValueChange: (value: BN) => void;\r\n  style?: CSSProperties;\r\n  value: BN;\r\n  decimalPlaces?: number\r\n}\r\n\r\nconst VALID_FIRST = /^[1-9]{1}$/;\r\nconst VALID_NEXT = /^[0-9]{1}$/;\r\nconst DELETE_KEY_CODE = 8;\r\n\r\nexport const CurrencyInput: FC<Props> = (props) => {\r\n  const {\r\n    className = '',\r\n    max = Number.MAX_SAFE_INTEGER,\r\n    onValueChange,\r\n    value,\r\n    name\r\n  } = props;\r\n\r\n  const style = props.style || {};\r\n  if (!style.textAlign) {\r\n    style.textAlign = 'right';\r\n  }\r\n\r\n  const decimalPlaces = typeof props.decimalPlaces !== 'undefined' ? props.decimalPlaces : 2;\r\n\r\n  const handleKeyDown = useCallback(\r\n    (e: KeyboardEvent<HTMLDivElement>): void => {\r\n      const { key, keyCode } = e;\r\n      if (\r\n        (value.isZero() && !VALID_FIRST.test(key)) ||\r\n        (!value.isZero() && !VALID_NEXT.test(key) && keyCode !== DELETE_KEY_CODE)\r\n      ) {\r\n        return;\r\n      }\r\n      const decimalShift = new BN(10).pow(decimalPlaces);\r\n      const valueString = value.times(decimalShift).toFixed(0);\r\n      let nextValue: BN;\r\n      if (keyCode !== DELETE_KEY_CODE) {\r\n        const nextValueString: string = value.isZero() ? key : `${valueString}${key}`;\r\n        nextValue = new BN(nextValueString);\r\n      } else {\r\n        const nextValueString = valueString.slice(0, -1);\r\n        nextValue = nextValueString === '' ? new BN(0) : new BN(nextValueString);\r\n      }\r\n      nextValue = nextValue.div(decimalShift);\r\n      onValueChange(nextValue);\r\n    },\r\n    [max, onValueChange, value]\r\n  );\r\n  const handleChange = useCallback(() => {\r\n    // DUMMY TO AVOID REACT WARNING\r\n  }, []);\r\n\r\n  const valueDisplay = value.toFormat(decimalPlaces, BN.ROUND_HALF_EVEN, {  groupSize: 3, groupSeparator: ',', decimalSeparator: '.' });\r\n\r\n  return (\r\n    <input\r\n      className={className}\r\n      name={name}\r\n      inputMode=\"numeric\"\r\n      onChange={handleChange}\r\n      onKeyDown={handleKeyDown}\r\n      style={style}\r\n      value={valueDisplay}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport BN from 'bignumber.js';\nimport { Navbar, Button, Alignment, Card, Elevation, FormGroup, InputGroup, ControlGroup, ButtonGroup, Classes, Icon, HTMLSelect, IOptionProps, Tag, Switch, IconName } from '@blueprintjs/core';\nimport { LineItemInput, LineItemUnit, LineItemInputProps } from './components/LineItemInput';\n\nimport { DateRange, DateRangeInput, IDateFormatProps, TimePrecision } from \"@blueprintjs/datetime\";\n\nimport './App.css';\nimport { MomentDateRange } from './components/MomentDates';\nimport moment from 'moment';\n\nenum TransportationMode {\n  None = 'none',\n  Airplane = 'airplane',\n  Train = 'train',\n  Bus = 'bus',\n  Rental = 'rental',\n  Charter = 'charter',\n  Custom = 'custom',\n}\n\ntype TransportationFormula =\n  'ticket' | 'variable' | 'fixed'\n\nconst TRANSPORTATION_OPTIONS: IOptionProps[] = [\n  { value: TransportationMode.None, label: 'N/A' },\n  { value: TransportationMode.Airplane, label: 'Airplane' },\n  { value: TransportationMode.Train, label: 'Train' },\n  { value: TransportationMode.Bus, label: 'Bus' },\n  { value: TransportationMode.Rental, label: 'Rental vehicle' },\n  { value: TransportationMode.Charter, label: 'Charter bus' },\n  { value: TransportationMode.Custom, label: 'Other' },\n]\n\nconst TRANSPORTATION_SPEC: Record<TransportationMode, TransportationFormula[]> = {\n  [TransportationMode.Airplane]: ['ticket'],\n  [TransportationMode.Train]: ['ticket'],\n  [TransportationMode.Bus]: ['ticket'],\n  [TransportationMode.Rental]: ['variable', 'fixed'],\n  [TransportationMode.Charter]: ['fixed'],\n  [TransportationMode.Custom]: ['fixed', 'variable', 'ticket'],\n  [TransportationMode.None]: [],\n}\n\nconst TRAVEL_REIMBUSRMENT_PER_MILE = new BN('0.435'); // per mile\n\ntype FormVariable = { value: BN, unit: LineItemUnit };\n\nconst createFormOps = (attendeesCount: FormVariable) => ({\n  TOTAL(x: FormVariable) {\n    if (x.unit === LineItemUnit.CostPerPerson) {\n      return x.value.times(attendeesCount.value);\n    }\n\n    if (x.unit === LineItemUnit.CostPerGroup) {\n      return x.value\n    }\n\n    throw new Error('invalid form variable unit');\n  },\n\n  PER_PERSON(x: FormVariable) {\n    if (attendeesCount.value === new BN(0)) {\n      return new BN(0);\n    }\n\n    if (x.unit === LineItemUnit.CostPerPerson) {\n      return x.value;\n    }\n\n    if (x.unit === LineItemUnit.CostPerGroup) {\n      return x.value.div(attendeesCount.value);\n    }\n\n    throw new Error('invalid form variable unit');\n  },\n\n  TIMES(scalar: FormVariable, per: FormVariable, per2?: FormVariable) {\n    if (scalar.unit === LineItemUnit.Miles && per.unit === LineItemUnit.CostPerMile) {\n      return scalar.value.times(per.value);\n    }\n\n    if (scalar.unit === LineItemUnit.Rooms\n        && per.unit === LineItemUnit.CostPerRoomPerNight\n        && per2?.unit === LineItemUnit.Nights) {\n      return scalar.value.times(per.value).times(per2.value);\n    }\n\n    throw new Error('invalid form variable unit');\n  },\n\n  WAYS(scalar: FormVariable, ways: TransportationWay) {\n    if (ways === TransportationWay.OneWay) {\n      return { value: scalar.value.times(2), unit: scalar.unit };\n    }\n    \n    if (ways === TransportationWay.RoundTrip) {\n      return scalar;\n    }\n\n    throw new Error('invalid call to ways')\n  }\n});\n\nconst outOfPocket = (x: BN) => {\n  // Rule 7\n  if (x.isLessThan(new BN('10.00'))) {\n    return x;\n  }\n\n  if (x.isLessThan(new BN('25.00'))) {\n    return new BN('5.00')\n  }\n\n  if (x.isLessThan(new BN('35.00'))) {\n    return new BN('10.00');\n  }\n\n  // Rule 13 (Figure 1)\n  if (x.isLessThan(new BN('100.00'))) {\n    return x.times(new BN('0.25'));\n  }\n\n  if (x.isLessThan(new BN('700.00'))) {\n    return x.times('0.125').plus('12.50');\n  }\n\n  return x.minus('600.00');\n}\n\nconst injectHooks: ((value: FormVariable, set: Dispatch<SetStateAction<FormVariable>>) => Pick<LineItemInputProps, 'value' | 'setValue' | 'defaultUnit' | 'setUnit'>) =\n  (obj, set) => ({\n    value: obj.value,\n    setValue: (x) => set({ ...obj, value: x }),\n    defaultUnit: obj.unit,\n    setUnit: (x) => set({ ...obj, unit: x }),\n  });\n\nconst sum = (...values: BN[]) => values.reduce((total, x) => total.plus(x), new BN(0));\n\nconst momentFormatter: (format: string) => IDateFormatProps = (format) => {\n  return {\n    formatDate: date => moment(date).format(format),\n    parseDate: str => moment(str, format).toDate(),\n    placeholder: `${format}`,\n  };\n}\n\nenum TransportationWay {\n  OneWay,\n  RoundTrip\n}\n\ninterface TransportationWaySpec {\n  value: TransportationWay;\n  icon: IconName;\n  label: string\n}\n\nconst TransportationWaySpecs: TransportationWaySpec[] = [\n  {\n    value: TransportationWay.OneWay,\n    icon: 'arrow-right',\n    label: 'one way',\n  },\n  {\n    value: TransportationWay.RoundTrip,\n    icon: 'circle-arrow-right',\n    label: 'round trip',\n  }\n]\n\nconst DEFAULT_DATE_FORMATTER = momentFormatter(\"MM/DD/YYYY\");\n\nconst App: React.FC = () => {\n  const [attendeesCount, setAttendeesCount] = useState({ value: new BN(0), unit: LineItemUnit.Persons });\n  const { TOTAL, TIMES, PER_PERSON, WAYS } = createFormOps(attendeesCount);\n  \n  const [registration, setRegistration] = useState({ value: new BN(0), unit: LineItemUnit.CostPerPerson });\n  \n  const [hotelFees, setHotelFees] = useState({ value: new BN(0), unit: LineItemUnit.CostPerGroup });\n  const [hotelDateRange, setHotelDateRange] = useState([undefined, undefined] as DateRange);\n  const [hotelRooms, setHotelRooms] = useState({ value: new BN(0), unit: LineItemUnit.Rooms });\n  const [hotelCostPerRoom, setHotelCostPerRoom] = useState({ value: new BN(0), unit: LineItemUnit.CostPerRoomPerNight });\n\n  const [transportationFixed, setTransportationFixed] = useState({ value: new BN(0), unit: LineItemUnit.CostPerPerson });\n  const [transportationVariableDistance, setTransportationVariableDistance] = useState({ value: new BN(0), unit: LineItemUnit.Miles });\n  const [transportationVariableCostPerDistance, setTransportationCostPerDistance] = useState({ value: new BN(0), unit: LineItemUnit.CostPerMile })\n  const [transportationCostPerTicket, setTransportationCostPerTicket] = useState({ value: new BN(0), unit: LineItemUnit.CostPerPerson });\n  const [transportationVariableWays, setTransportationVariableWays] = useState(TransportationWay.OneWay);\n  const [transportationTicketWays, setTransportationTicketWays] = useState(TransportationWay.RoundTrip);\n  const [transportationMode, setTransportationMode] = useState(TransportationMode.Rental);\n\n  const hotelNightsValue =\n    !hotelDateRange || (!hotelDateRange[0] && !hotelDateRange[1]) ? 0 :\n    !!hotelDateRange[0] != !!hotelDateRange[1] ? 1 :\n    Math.max(1, moment(hotelDateRange[1]).diff(moment(hotelDateRange[0]), 'day'))\n\n  const hotelNights: FormVariable = { value: new BN(hotelNightsValue), unit: LineItemUnit.Nights };\n\n  const transportationVariableFees =\n    WAYS(\n      { value: TIMES(transportationVariableDistance, transportationVariableCostPerDistance), unit: LineItemUnit.CostPerGroup },\n      transportationVariableWays);\n  \n  const transportationVariableReimbursement =\n    WAYS({ value: transportationVariableDistance.value.times(TRAVEL_REIMBUSRMENT_PER_MILE), unit: LineItemUnit.CostPerGroup },\n      transportationVariableWays);\n\n  const transprotationVariable =\n    sum(TOTAL(transportationVariableFees)\n      , TOTAL(transportationVariableReimbursement));\n\n  const transportationTicket =\n    WAYS(transportationCostPerTicket, transportationTicketWays);\n\n  const totalTransportation =\n    sum(TOTAL(transportationFixed)\n      , TOTAL(transportationTicket)\n      , transprotationVariable);\n\n  const perPersonRequestedTransportation =\n    PER_PERSON(transportationFixed)\n      .plus(PER_PERSON(transportationTicket))\n\n  const perPersonRequestedRegistration = PER_PERSON(registration);\n\n  const hotelRoomsTotal =\n    TIMES(hotelRooms, hotelCostPerRoom, hotelNights);\n\n  const totalHotel =\n    sum(TOTAL(hotelFees)\n      , hotelRoomsTotal);\n\n  const perPersonRequestedHotel =\n    PER_PERSON({ value: totalHotel, unit: LineItemUnit.CostPerGroup });\n\n  const perPersonRequestedTotal =\n    sum(perPersonRequestedRegistration\n      , perPersonRequestedTransportation\n      , perPersonRequestedHotel);\n\n  const perPersonOutOfPocket =\n    outOfPocket(perPersonRequestedTotal)\n      .decimalPlaces(0, BN.ROUND_HALF_EVEN);\n\n  const grandTotalOutOfPocket =\n    perPersonOutOfPocket.times(attendeesCount.value);\n\n  const totalRegistration = TOTAL(registration);\n\n  const grandTotalRequested =\n    sum(totalRegistration\n      , totalTransportation\n      , totalHotel);\n\n  const totalRequestedVariable = transportationVariableFees;\n\n  const totalRequestedFixed =\n      perPersonRequestedTotal.times(attendeesCount.value);\n\n  const grandTotalApproved =\n    grandTotalRequested\n      .minus(grandTotalOutOfPocket);\n\n  const state = {\n    attendeesCount,\n    registration,\n    hotel: {\n      dates: hotelDateRange,\n      nights: hotelNights,\n      rooms: hotelRooms,\n      costPerRoom: hotelCostPerRoom,\n      roomsTotal: hotelRoomsTotal,\n      fees: hotelFees,\n      totals: {\n        requested: totalHotel,\n        perPerson: perPersonRequestedHotel,\n      }\n    },\n    transportation: {\n      fixed: transportationFixed,\n      variable: {\n        distance: transportationVariableDistance,\n        costPerDistance: transportationVariableCostPerDistance,\n      },\n      ticket: transportationCostPerTicket,\n      mode: transportationMode,\n    },\n    totals: {\n      split: {\n        fixed: totalRequestedFixed,\n        variable: totalRequestedVariable,\n      },\n      decision: {\n        requested: grandTotalRequested,\n        approved: grandTotalApproved,\n      },\n      perPerson: {\n        requested: perPersonRequestedTotal,\n        outOfPocket: perPersonOutOfPocket,\n      }\n    }\n  }\n\n  return (\n    <>\n      <Navbar className=\"sf-navbar\">\n        <Navbar.Group align={Alignment.LEFT}>\n          <Navbar.Heading>specflow</Navbar.Heading>\n          <Navbar.Divider />\n          <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n          <Button className=\"bp3-minimal\" icon=\"document\" text=\"Files\" />\n        </Navbar.Group>\n      </Navbar>\n\n      <main style={{margin: 10}}>\n        <Card elevation={Elevation.TWO}>\n          <h2 style={{display: 'inline-block'}}>Group 1</h2>\n        \n          <aside style={{ display: 'flex', flexDirection: 'column', float: 'right'}}>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n              <FormGroup\n                label=\"Total requested expenses\"\n                style={{ padding: '0 10px', float: 'right', maxWidth: 148, fontWeight: 'bold' }}\n              >\n                <Icon icon=\"dollar\" />\n                <span style={{ float: 'right' }}>{grandTotalRequested.toFormat(2)}</span>\n              </FormGroup>\n\n              <FormGroup\n                label=\"Total approved expenses\"\n                style={{ padding: '0 10px', float: 'right', width: 148, fontWeight: 'bold' }}\n            >\n                <Icon icon=\"dollar\" />\n                <span style={{ float: 'right' }}>{grandTotalApproved.toFormat(2)}</span>\n              </FormGroup>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n              <FormGroup\n                label=\"Requested per person\"\n                style={{ padding: '0 10px', float: 'right', width: 148, fontWeight: 'bold' }}\n              >\n                <Icon icon=\"dollar\" />\n                <span style={{ float: 'right' }}>{perPersonRequestedTotal.toFormat(2)}</span>\n              </FormGroup>\n\n              <FormGroup\n                label=\"Out of pocket per person\"\n                style={{ padding: '0 10px', float: 'right', width: 148, fontWeight: 'bold' }}\n            >\n                <Icon icon=\"dollar\" />\n                <span style={{ float: 'right' }}>{perPersonOutOfPocket.toFormat(2)}</span>\n              </FormGroup>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n              <FormGroup\n                label=\"Requested variable\"\n                style={{ padding: '0 10px', float: 'right', width: 148 }}\n              >\n                <Icon icon=\"dollar\" />\n                <span style={{ float: 'right' }}>{totalRequestedVariable.value.toFormat(2)}</span>\n              </FormGroup>\n\n              <FormGroup\n                label=\"Requested fixed\"\n                style={{ padding: '0 10px', float: 'right', width: 148 }}\n              >\n                <Icon icon=\"dollar\" />\n                <span style={{ float: 'right' }}>{totalRequestedFixed.toFormat(2)}</span>\n              </FormGroup>\n            </div>\n\n            {/* <pre>{JSON.stringify(state, null, 2)}</pre> */}\n          </aside>\n\n          <LineItemInput\n            {...injectHooks(attendeesCount, setAttendeesCount)}\n            label=\"Number of attendees\"\n            name=\"attendees-count\"\n            labelInfo=\"(required)\"\n            units={[LineItemUnit.Persons]} />\n\n          <h3>Registration</h3>\n\n          <LineItemInput\n            {...injectHooks(registration, setRegistration)}\n            label=\"Registration fees\"\n            name=\"registration-fees\"\n            labelInfo=\"(optional)\" />\n\n          <h3>Transportation</h3>\n\n          <FormGroup\n            label=\"Mode of transportation\"\n            labelFor=\"transportation-mode\"\n            labelInfo=\"(required)\"\n          >\n            <HTMLSelect\n              options={TRANSPORTATION_OPTIONS}\n              onChange={(e) => setTransportationMode(e.currentTarget.value as TransportationMode)}\n              value={transportationMode} />\n          </FormGroup>\n\n          {TRANSPORTATION_SPEC[transportationMode].map((x, i) => {\n            switch (x) {\n              case 'ticket':\n                return <div style={{display: 'flex', flexWrap: 'wrap' }}>\n                  <LineItemInput\n                    {...injectHooks(transportationCostPerTicket, setTransportationCostPerTicket)}\n                    label=\"Ticket price per person\"\n                    name=\"transportation-ticket-fee\" />\n\n                  <FormGroup label=\"Ticket price is per\">\n                    <ButtonGroup>\n                      {TransportationWaySpecs.map((x, i) =>\n                        <Button\n                          key={i}\n                          icon={x.icon}\n                          active={transportationTicketWays === x.value}\n                          onClick={() => setTransportationTicketWays(x.value)}>\n                          {x.label}\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                  </FormGroup>\n                </div>\n\n              case 'fixed':\n                return <LineItemInput\n                  {...injectHooks(transportationFixed, setTransportationFixed)}\n                  label=\"Flat fee\"\n                  name=\"transportation-flat-fee\"\n                  labelInfo=\"(required)\" />\n\n              case 'variable':\n                return (\n                  <>\n                    <div style={{display: 'flex', flexWrap: 'wrap'}}>\n                      <LineItemInput\n                        {...injectHooks(transportationVariableDistance, setTransportationVariableDistance)}\n                        label=\"Travel distance\"\n                        name=\"transportation-variable-distance\"\n                        labelInfo=\"(required)\"\n                        units={[LineItemUnit.Miles]} />\n\n                      <FormGroup label=\"Travel distance covers\">\n                        <ButtonGroup>\n                          {TransportationWaySpecs.map((x, i) =>\n                            <Button\n                              key={i}\n                              icon={x.icon}\n                              active={transportationVariableWays === x.value}\n                              onClick={() => setTransportationVariableWays(x.value)}>\n                              {x.label}\n                            </Button>\n                          )}\n                        </ButtonGroup>\n                      </FormGroup>\n\n                      <FormGroup\n                        label=\"Travel reimbursement rate\"\n                        style={{ padding: '0 10px' }}\n                      >\n                        <Icon icon=\"dollar\" />\n                        <span style={{float: 'right'}}><span style={{ paddingRight: 5 }}>{TRAVEL_REIMBUSRMENT_PER_MILE.toFormat()}</span><Tag minimal>per mile</Tag></span>\n                      </FormGroup>\n\n                      <FormGroup\n                        label=\"Travel reimbursement\"\n                        style={{padding: '0 10px'}}\n                      >\n                        <Icon icon=\"dollar\" />\n                        <span style={{float: 'right'}}>{transportationVariableReimbursement.value.toFormat(2)}</span>\n                      </FormGroup>\n                    </div>\n\n                    <LineItemInput\n                      {...injectHooks(transportationVariableCostPerDistance, setTransportationCostPerDistance)}\n                      label=\"Cost per mile\"\n                      name=\"transportation-cost-per-mile\"\n                      labelInfo=\"(required)\"\n                      units={[LineItemUnit.CostPerMile]} />\n                  </>\n                );\n            }\n          })}\n\n          <h3>Lodging / Hotel</h3>\n\n          <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n            <FormGroup\n              label=\"Hotel check-in &amp; check-out dates\">\n              <DateRangeInput\n                {...DEFAULT_DATE_FORMATTER}\n                allowSingleDayRange={true}\n                contiguousCalendarMonths={true}\n                onChange={setHotelDateRange}\n                value={hotelDateRange}\n                shortcuts={false}\n              />\n              <MomentDateRange range={hotelDateRange} />\n            </FormGroup>\n\n            <FormGroup\n              label=\"Hotel nights\"\n              style={{ padding: '0 10px' }}\n            >\n              <Icon icon=\"moon\" />\n              <span style={{ float: 'right' }}><span style={{ paddingRight: 5 }}>{hotelNights.value.toFixed(0)}</span><Tag minimal>nights</Tag></span>\n            </FormGroup>\n          </div>\n\n          <div style={{ display: 'flex', flexWrap: 'wrap'}}>\n            <LineItemInput\n              {...injectHooks(hotelRooms, setHotelRooms)}\n              label=\"# of Rooms\"\n              name=\"hotel-rooms\"\n              labelInfo=\"(required)\"\n              units={[LineItemUnit.Rooms]} />\n\n            <LineItemInput\n              {...injectHooks(hotelCostPerRoom, setHotelCostPerRoom)}\n              label=\"Cost per Room per Night\"\n              name=\"hotel-cost-per-room\"\n              labelInfo=\"(required)\"\n              units={[LineItemUnit.CostPerRoomPerNight]} />\n\n            <LineItemInput\n              {...injectHooks(hotelFees, setHotelFees)}\n              label=\"Other hotel fees (include taxes, other fees)\"\n              name=\"hotel-fees\"\n              labelInfo=\"(optional)\"\n              units={[LineItemUnit.CostPerGroup]} />\n\n            <FormGroup\n              label=\"Total for hotel\"\n              style={{ padding: '0 10px' }}\n            >\n              <Icon icon=\"dollar\" />\n              <span style={{ float: 'right' }}><span style={{ paddingRight: 5 }}>{totalHotel.toFormat(0, BN.ROUND_HALF_UP)}</span></span>\n            </FormGroup>\n          </div>\n\n        </Card>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// https://github.com/palantir/blueprint/blob/develop/packages/docs-app/src/examples/datetime-examples/common/momentDate.tsx\r\n\r\n/*\r\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Icon, Intent, IProps, Tag } from \"@blueprintjs/core\";\r\nimport { DateRange } from \"@blueprintjs/datetime\";\r\nimport classNames from \"classnames\";\r\nimport moment from \"moment\";\r\nimport * as React from \"react\";\r\n\r\nconst FORMAT = \"dddd, LL\";\r\nconst FORMAT_TIME = \"dddd, LL LT\";\r\n\r\nexport const MomentDate: React.SFC<{ date?: Date; format?: string; withTime?: boolean }> = ({\r\n  date,\r\n  withTime = false,\r\n  format = withTime ? FORMAT_TIME : FORMAT,\r\n}) => {\r\n  const m = moment(date);\r\n  if (m.isValid()) {\r\n    return <Tag intent={Intent.PRIMARY}>{m.format(format)}</Tag>;\r\n  } else {\r\n    return <Tag minimal={true}>no date</Tag>;\r\n  }\r\n};\r\n\r\nexport const MomentDateRange: React.SFC<{ range: DateRange; format?: string; withTime?: boolean } & IProps> = ({\r\n  className,\r\n  range: [start, end],\r\n  withTime = false,\r\n  format = withTime ? FORMAT_TIME : FORMAT,\r\n}) => (\r\n    <div className={classNames(\"docs-date-range\", className)}>\r\n      <MomentDate withTime={withTime} date={start} format={format} />\r\n      <Icon icon=\"arrow-right\" />\r\n      <MomentDate withTime={withTime} date={end} format={format} />\r\n    </div>);\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}